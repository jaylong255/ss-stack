{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Stack to deploy a highly available, elastic, scalable environment. This master stack launches multiple nested stacks for different tiers. !! This can only be run in certain AWS Regions - 'us-east-1', 'us-east-2', 'us-west-2', 'eu-west-1'.",
    "Metadata": {
        "Authors": {
            "Description": "Darryl Osborne (darrylo@amazon.com)"
        },
        "License": {
            "Description": "Copyright 2018 Amazon.com, Inc. and its affiliates. All Rights Reserved. SPDX-License-Identifier: MIT-0"
        },
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "General AWS"
                    },
                    "Parameters": [
                        "SshAccessCidr"
                    ]
                },
                {
                    "Label": {
                        "default": "Network"
                    },
                    "Parameters": [
                        "NumberOfAZs",
                        "AvailabilityZones",
                        "VpcCidr",
                        "VpcTenancy",
                        "PublicSubnet0Cidr",
                        "PublicSubnet1Cidr",
                        "PublicSubnet2Cidr",
                        "PublicSubnet3Cidr",
                        "PublicSubnet4Cidr",
                        "PublicSubnet5Cidr",
                        "WebSubnet0Cidr",
                        "WebSubnet1Cidr",
                        "WebSubnet2Cidr",
                        "WebSubnet3Cidr",
                        "WebSubnet4Cidr",
                        "WebSubnet5Cidr",
                        "DataSubnet0Cidr",
                        "DataSubnet1Cidr",
                        "DataSubnet2Cidr",
                        "DataSubnet3Cidr",
                        "DataSubnet4Cidr",
                        "DataSubnet5Cidr"
                    ]
                },
                {
                    "Label": {
                        "default": "Database Tier"
                    },
                    "Parameters": [
                        "DatabaseInstanceType",
                        "DatabaseEncrpytedBoolean",
                        "DatabaseCmk",
                        "DatabaseMasterUsername",
                        "DatabaseMasterPassword",
                        "DatabaseName",
                        "UseElastiCacheBoolean",
                        "ElastiCacheNodeType"
                    ]
                }
            ],
            "ParameterLabels": {
                "DatabaseCmk": {
                    "default": "AWS KMS CMK for RDS"
                },
                "DatabaseEncrpytedBoolean": {
                    "default": "Encrypted DB Cluster"
                },
                "DatabaseInstanceType": {
                    "default": "DB Instance Class"
                },
                "DatabaseMasterUsername": {
                    "default": "DB Master Username"
                },
                "DatabaseMasterPassword": {
                    "default": "DB Master Password"
                },
                "DatabaseName": {
                    "default": "DB Name"
                },
                "ElastiCacheNodeType": {
                    "default": "Cache Cluster Node Type"
                },
                "PublicAlbAcmCertificate": {
                    "default": "ALB Certificate ARN"
                },
                "SshAccessCidr": {
                    "default": "SSH Access From"
                },
                "UseElastiCacheBoolean": {
                    "default": "Cache Cluster (ElastiCache)"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "NumberOfAZs": {
                    "default": "Number of Availability Zones"
                },
                "VpcCidr": {
                    "default": "VpcCidr"
                },
                "VpcTenancy": {
                    "default": "VpcTenancy"
                },
                "PublicSubnet0Cidr": {
                    "default": "Public Subnet 0"
                },
                "PublicSubnet1Cidr": {
                    "default": "Public Subnet 1"
                },
                "PublicSubnet2Cidr": {
                    "default": "Public Subnet 2"
                },
                "PublicSubnet3Cidr": {
                    "default": "Public Subnet 3"
                },
                "PublicSubnet4Cidr": {
                    "default": "Public Subnet 4"
                },
                "PublicSubnet5Cidr": {
                    "default": "Public Subnet 5"
                },
                "WebSubnet0Cidr": {
                    "default": "Web Subnet 0"
                },
                "WebSubnet1Cidr": {
                    "default": "Web Subnet 1"
                },
                "WebSubnet2Cidr": {
                    "default": "Web Subnet 2"
                },
                "WebSubnet3Cidr": {
                    "default": "Web Subnet 3"
                },
                "WebSubnet4Cidr": {
                    "default": "Web Subnet 4"
                },
                "WebSubnet5Cidr": {
                    "default": "Web Subnet 5"
                },
                "DataSubnet0Cidr": {
                    "default": "Data Subnet 0"
                },
                "DataSubnet1Cidr": {
                    "default": "Data Subnet 1"
                },
                "DataSubnet2Cidr": {
                    "default": "Data Subnet 2"
                },
                "DataSubnet3Cidr": {
                    "default": "Data Subnet 3"
                },
                "DataSubnet4Cidr": {
                    "default": "Data Subnet 4"
                },
                "DataSubnet5Cidr": {
                    "default": "Data Subnet 5"
                }
            }
        }
    },
    "Parameters": {
        "DatabaseCmk": {
            "Description": "AWS KMS Customer Master Key (CMK) to encrypt database cluster",
            "Type": "String"
        },
        "DatabaseEncrpytedBoolean": {
            "AllowedValues": [
                true,
                false
            ],
            "Default": true,
            "Description": "Indicates whether the DB instances in the cluster are encrypted.",
            "Type": "String"
        },
        "DatabaseInstanceType": {
            "AllowedValues": [
                "db.t2.small",
                "db.t2.medium",
                "db.r3.large",
                "db.r3.xlarge",
                "db.r3.2xlarge",
                "db.r3.4xlarge",
                "db.r3.8xlarge",
                "db.r4.large",
                "db.r4.xlarge",
                "db.r4.2xlarge",
                "db.r4.4xlarge",
                "db.r4.8xlarge",
                "db.r4.16xlarge"
            ],
            "ConstraintDescription": "Must be a valid RDS instance class.",
            "Default": "db.t2.medium",
            "Description": "The Amazon RDS database instance class.",
            "Type": "String"
        },
        "DatabaseMasterUsername": {
            "AllowedPattern": "^([a-zA-Z0-9]*)$",
            "Description": "The Amazon RDS master username.",
            "ConstraintDescription": "Must contain only alphanumeric characters (minimum 8; maximum 16).",
            "MaxLength": 16,
            "MinLength": 8,
            "Type": "String"
        },
        "DatabaseMasterPassword": {
            "AllowedPattern": "^([a-zA-Z0-9`~!#$%^&*()_+,\\\\-])*$",
            "ConstraintDescription": "Must be letters (upper or lower), numbers, spaces, and these special characters `~!#$%^&*()_+,-",
            "Description": "The Amazon RDS master password. Letters, numbers, spaces, and these special characters `~!#$%^&*()_+,-",
            "MaxLength": 41,
            "MinLength": 8,
            "NoEcho": true,
            "Type": "String"
        },
        "DatabaseName": {
            "AllowedPattern": "^([a-zA-Z0-9]*)$",
            "Description": "The Amazon RDS master database name.",
            "Type": "String"
        },
        "ElastiCacheNodeType": {
            "AllowedValues": [
                "cache.t2.micro",
                "cache.t2.small",
                "cache.t2.medium",
                "cache.m4.large",
                "cache.m4.xlarge",
                "cache.m4.2xlarge",
                "cache.m4.4xlarge",
                "cache.m4.10xlarge",
                "cache.m3.medium",
                "cache.m3.large",
                "cache.m3.xlarge",
                "cache.m3.2xlarge",
                "cache.r3.large",
                "cache.r3.xlarge",
                "cache.r3.2xlarge",
                "cache.r3.4xlarge",
                "cache.r3.8xlarge"
            ],
            "ConstraintDescription": "Must be a valid Amazon ElastiCache node type.",
            "Default": "cache.t2.medium",
            "Description": "The Amazon ElastiCache cluster node type.",
            "Type": "String"
        },
        "PublicAlbAcmCertificate": {
            "AllowedPattern": "^$|(arn:aws:acm:)([a-z0-9/:-])*([a-z0-9])$",
            "Description": "[ Optional ] The AWS Certification Manager certificate ARN for the ALB certificate - this certificate should be created in the region you wish to run the ALB and must reference the domain name you use below.",
            "Type": "String"
        },
        "SshAccessCidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Description": "The CIDR IP range that is permitted to SSH to bastion instance. Note - a value of 0.0.0.0/0 will allow access from ANY IP address.",
            "Type": "String",
            "Default": "0.0.0.0/0"
        },
        "UseElastiCacheBoolean": {
            "AllowedValues": [
                true,
                false
            ],
            "Default": true,
            "Description": "Specifies whether an ElastiCache Cache Cluster should be created to cache database content.",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "NumberOfAZs": {
            "AllowedValues": [
                2,
                3,
                4,
                5,
                6
            ],
            "Default": 3,
            "Description": "Number of Availability Zones to use in the VPC. This must match your selections in the list of Availability Zones parameter.",
            "Type": "Number"
        },
        "VpcCidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/16",
            "Description": "CIDR block for the VPC",
            "Type": "String"
        },
        "VpcTenancy": {
            "AllowedValues": [
                "default",
                "dedicated"
            ],
            "Default": "default",
            "Description": "The allowed tenancy of instances launched into the VPC",
            "Type": "String"
        },
        "DataSubnet0Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.100.0/24",
            "Description": "CIDR block for data subnet 0 located in Availability Zone 0",
            "Type": "String"
        },
        "DataSubnet1Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.101.0/24",
            "Description": "CIDR block for data subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "DataSubnet2Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.102.0/24",
            "Description": "CIDR block for data subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "DataSubnet3Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.103.0/24",
            "Description": "CIDR block for data subnet 3 located in Availability Zone 3",
            "Type": "String"
        },
        "DataSubnet4Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.104.0/24",
            "Description": "CIDR block for data subnet 4 located in Availability Zone 4",
            "Type": "String"
        },
        "DataSubnet5Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.105.0/24",
            "Description": "CIDR block for data subnet 5 located in Availability Zone 5",
            "Type": "String"
        },
        "PublicSubnet0Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.200.0/24",
            "Description": "CIDR block for Public subnet 0 located in Availability Zone 0",
            "Type": "String"
        },
        "PublicSubnet1Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.201.0/24",
            "Description": "CIDR block for Public subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.202.0/24",
            "Description": "CIDR block for Public subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "PublicSubnet3Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.203.0/24",
            "Description": "CIDR block for Public subnet 3 located in Availability Zone 3",
            "Type": "String"
        },
        "PublicSubnet4Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.204.0/24",
            "Description": "CIDR block for Public subnet 4 located in Availability Zone 4",
            "Type": "String"
        },
        "PublicSubnet5Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.205.0/24",
            "Description": "CIDR block for Public subnet 5 located in Availability Zone 5",
            "Type": "String"
        },
        "WebSubnet0Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/22",
            "Description": "CIDR block for Web subnet 0 located in Availability Zone 0",
            "Type": "String"
        },
        "WebSubnet1Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.4.0/22",
            "Description": "CIDR block for Web subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "WebSubnet2Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.8.0/22",
            "Description": "CIDR block for Web subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "WebSubnet3Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.12.0/22",
            "Description": "CIDR block for Web subnet 3 located in Availability Zone 3",
            "Type": "String"
        },
        "WebSubnet4Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.16.0/22",
            "Description": "CIDR block for Web subnet 4 located in Availability Zone 4",
            "Type": "String"
        },
        "WebSubnet5Cidr": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.20.0/22",
            "Description": "CIDR block for Web subnet 5 located in Availability Zone 5",
            "Type": "String"
        }
    },
    "Conditions": {
        "AvailableAWSRegion": {
            "Fn::Or": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "AWS::Region"
                        },
                        "ap-southeast-2"
                    ]
                },
                {
                    "Fn::Equals": [
                        {
                            "Ref": "AWS::Region"
                        },
                        "eu-central-1"
                    ]
                },
                {
                    "Fn::Equals": [
                        {
                            "Ref": "AWS::Region"
                        },
                        "eu-west-1"
                    ]
                },
                {
                    "Fn::Equals": [
                        {
                            "Ref": "AWS::Region"
                        },
                        "us-east-1"
                    ]
                },
                {
                    "Fn::Equals": [
                        {
                            "Ref": "AWS::Region"
                        },
                        "us-east-2"
                    ]
                },
                {
                    "Fn::Equals": [
                        {
                            "Ref": "AWS::Region"
                        },
                        "us-west-2"
                    ]
                }
            ]
        },
        "DeployElastiCache": {
            "Fn::And": [
                {
                    "Fn::Equals": [
                        true,
                        {
                            "Ref": "UseElastiCacheBoolean"
                        }
                    ]
                },
                {
                    "Condition": "AvailableAWSRegion"
                }
            ]
        }
    },
    "Resources": {
        "elasticache": {
            "Condition": "DeployElastiCache",
            "DependsOn": [
                "newvpc",
                "securitygroups"
            ],
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "Subnet": {
                        "Fn::GetAtt": [
                            "newvpc",
                            "Outputs.DataSubnet"
                        ]
                    },
                    "ElastiCacheNodeType": {
                        "Ref": "ElastiCacheNodeType"
                    },
                    "ElastiCacheSecurityGroup": {
                        "Fn::GetAtt": [
                            "securitygroups",
                            "Outputs.ElastiCacheSecurityGroup"
                        ]
                    },
                    "NumberOfSubnets": {
                        "Ref": "NumberOfAZs"
                    }
                },
                "TemplateURL": "https://s3-external-1.amazonaws.com/cf-templates-5thzzrqlwyb9-us-east-1/2020007FOW-03-elasticache.json"
            }
        },
        "newvpc": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "NumberOfAZs": {
                        "Ref": "NumberOfAZs"
                    },
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "VpcCidr": {
                        "Ref": "VpcCidr"
                    },
                    "VpcTenancy": {
                        "Ref": "VpcTenancy"
                    },
                    "PublicSubnet0Cidr": {
                        "Ref": "PublicSubnet0Cidr"
                    },
                    "PublicSubnet1Cidr": {
                        "Ref": "PublicSubnet1Cidr"
                    },
                    "PublicSubnet2Cidr": {
                        "Ref": "PublicSubnet2Cidr"
                    },
                    "PublicSubnet3Cidr": {
                        "Ref": "PublicSubnet3Cidr"
                    },
                    "PublicSubnet4Cidr": {
                        "Ref": "PublicSubnet4Cidr"
                    },
                    "PublicSubnet5Cidr": {
                        "Ref": "PublicSubnet5Cidr"
                    },
                    "WebSubnet0Cidr": {
                        "Ref": "WebSubnet0Cidr"
                    },
                    "WebSubnet1Cidr": {
                        "Ref": "WebSubnet1Cidr"
                    },
                    "WebSubnet2Cidr": {
                        "Ref": "WebSubnet2Cidr"
                    },
                    "WebSubnet3Cidr": {
                        "Ref": "WebSubnet3Cidr"
                    },
                    "WebSubnet4Cidr": {
                        "Ref": "WebSubnet4Cidr"
                    },
                    "WebSubnet5Cidr": {
                        "Ref": "WebSubnet5Cidr"
                    },
                    "DataSubnet0Cidr": {
                        "Ref": "DataSubnet0Cidr"
                    },
                    "DataSubnet1Cidr": {
                        "Ref": "DataSubnet1Cidr"
                    },
                    "DataSubnet2Cidr": {
                        "Ref": "DataSubnet2Cidr"
                    },
                    "DataSubnet3Cidr": {
                        "Ref": "DataSubnet3Cidr"
                    },
                    "DataSubnet4Cidr": {
                        "Ref": "DataSubnet4Cidr"
                    },
                    "DataSubnet5Cidr": {
                        "Ref": "DataSubnet5Cidr"
                    }
                },
                "TemplateURL": "https://s3-external-1.amazonaws.com/cf-templates-5thzzrqlwyb9-us-east-1/2020007zw0-01-newvpc.json"
            }
        },
        "publicalb": {
            "Condition": "AvailableAWSRegion",
            "DependsOn": [
                "newvpc",
                "securitygroups"
            ],
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "NumberOfSubnets": {
                        "Ref": "NumberOfAZs"
                    },
                    "Subnet": {
                        "Fn::GetAtt": [
                            "newvpc",
                            "Outputs.PublicSubnet"
                        ]
                    },
                    "PublicAlbAcmCertificate": {
                        "Ref": "PublicAlbAcmCertificate"
                    },
                    "PublicAlbSecurityGroup": {
                        "Fn::GetAtt": [
                            "securitygroups",
                            "Outputs.PublicAlbSecurityGroup"
                        ]
                    },
                    "Vpc": {
                        "Fn::GetAtt": [
                            "newvpc",
                            "Outputs.Vpc"
                        ]
                    }
                },
                "TemplateURL": "https://s3-external-1.amazonaws.com/cf-templates-5thzzrqlwyb9-us-east-1/2020007Hd5-03-publicalb.json"
            }
        },
        "rds": {
            "Condition": "AvailableAWSRegion",
            "DependsOn": [
                "newvpc",
                "securitygroups"
            ],
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "DatabaseInstanceType": {
                        "Ref": "DatabaseInstanceType"
                    },
                    "DatabaseMasterUsername": {
                        "Ref": "DatabaseMasterUsername"
                    },
                    "DatabaseMasterPassword": {
                        "Ref": "DatabaseMasterPassword"
                    },
                    "DatabaseName": {
                        "Ref": "DatabaseName"
                    },
                    "DatabaseEncrpytedBoolean": {
                        "Ref": "DatabaseEncrpytedBoolean"
                    },
                    "DatabaseCmk": {
                        "Ref": "DatabaseCmk"
                    },
                    "DatabaseSecurityGroup": {
                        "Fn::GetAtt": [
                            "securitygroups",
                            "Outputs.DatabaseSecurityGroup"
                        ]
                    },
                    "Subnet": {
                        "Fn::GetAtt": [
                            "newvpc",
                            "Outputs.DataSubnet"
                        ]
                    },
                    "NumberOfSubnets": {
                        "Ref": "NumberOfAZs"
                    }
                },
                "TemplateURL": "https://s3-external-1.amazonaws.com/cf-templates-5thzzrqlwyb9-us-east-1/2020007G5M-03-rds.json"
            }
        },
        "securitygroups": {
            "Condition": "AvailableAWSRegion",
            "DependsOn": "newvpc",
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "SshAccessCidr": {
                        "Ref": "SshAccessCidr"
                    },
                    "Vpc": {
                        "Fn::GetAtt": [
                            "newvpc",
                            "Outputs.Vpc"
                        ]
                    }
                },
                "TemplateURL": "https://s3-external-1.amazonaws.com/cf-templates-5thzzrqlwyb9-us-east-1/2020007nCS-02-securitygroups.json"
            }
        }
    }
}
